# -*- coding: utf-8 -*-
# Licensed under a 3-clause BSD style license - see LICENSE.rst
#
# Astropy documentation build configuration file.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this file.
#
# All configuration values have a default. Some values are defined in
# the global Astropy configuration which is loaded here before anything else.
# See astropy.sphinx.conf for which values are set there.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# sys.path.insert(0, os.path.abspath('..'))
# IMPORTANT: the above commented section was generated by sphinx-quickstart, but
# is *NOT* appropriate for astropy or Astropy affiliated packages. It is left
# commented out with this explanation to make it clear why this should not be
# done. If the sys.path entry above is added, when the astropy.sphinx.conf
# import occurs, it will import the *source* version of astropy instead of the
# version installed (if invoked as "make html" or directly with sphinx), or the
# version in the build directory (if "python setup.py build_sphinx" is used).
# Thus, any C-extensions that are needed to build the documentation will *not*
# be accessible, and the documentation will not build correctly.

import datetime
import os
import sys

sys.path.insert(0, os.path.abspath(".."))
import tomllib

# from sphinx_gallery.sorting import FileNameSortKey  # noqa: F401

sys.path.insert(0, os.path.abspath("_pybtex_style"))
import short_alpha  # noqa: F401

try:
    from sphinx_astropy.conf.v2 import *  # noqa
except ImportError:
    print(
        "ERROR: the documentation requires the sphinx-astropy package to be installed"
    )
    sys.exit(1)


# Get configuration information from pyproject.toml

with open(os.path.join(os.path.dirname(__file__), "..", "pyproject.toml"), "rb") as f:
    project_metadata = tomllib.load(f)["project"]

# -- General configuration ----------------------------------------------------

# By default, highlight as Python 3.
highlight_language = "python3"


# --- Additional/local Sphinx extensions ---
# Add only those extensions that are NOT already included in sphinx_astropy.conf.v2

try:
    extensions  # noqa: F405
except NameError:
    extensions = [
        "sphinx.ext.autodoc",  # Automatic documentation for Python objects (functions, classes, etc.)
        "sphinx.ext.napoleon",  # Support for Google-style and NumPy-style docstrings
        "sphinx.ext.intersphinx",  # Cross-references to the docs of other projects
        "sphinx.ext.todo",  # Use .. todo:: directives in your docs
        "sphinx.ext.viewcode",  # Add links to highlighted source code in the API docs
        "sphinxcontrib.bibtex",  # Scientific references (for citations)
        "sphinx.ext.autosummary",  # Automatically generate summaries for modules, functions, classes, etc.
        "sphinx.ext.extlinks",  # Create custom external links (e.g., to GitHub issues or web pages)
        "sphinx.ext.coverage",  # Display code coverage information in the documentation
        "sphinx.ext.inheritance_diagram",  # Generate inheritance diagrams for classes
        "sphinx.ext.graphviz",  # Integrate Graphviz diagrams and graphs into the documentation
        "sphinx_automodapi.automodapi",
        "sphinxcontrib.jquery",
        "sphinx_copybutton",
        "sphinx_astropy.ext.intersphinx_toggle",
        "sphinx_automodapi.smart_resolver",
        "pytest_doctestplus.sphinx.doctestplus",
        "matplotlib.sphinxext.plot_directive",
        "sphinx_astropy.ext.generate_config",
        "sphinx_astropy.ext.missing_static",
        "sphinx_astropy.ext.changelog_links",
        "jupyter_sphinx",
        "sphinx_thebe",
        # other extensions...
    ]

# Remove 'numpydoc' if present (we want to use 'napoleon' instead)
if "numpydoc" in extensions:
    extensions.remove("numpydoc")

additional_extensions = [
    "sphinx.ext.napoleon",
    "sphinxcontrib.typer",
    "sphinxcontrib.bibtex",
    "sphinx_astropy.ext.edit_on_github",
    "sphinx.ext.mathjax",
    "nbsphinx",
    # "sphinx_gallery.gen_gallery",
    "sphinx_design",
    "jupyter_sphinx",
    "sphinx_thebe",
    "sphinx_automodapi.automodapi",
]
for ext in additional_extensions:
    if ext not in extensions:
        extensions.append(ext)

# Activate TODO
todo_include_todos = True


# -- Options for nbsphinx -----------------------------------------------------

# examples_dirs = ["./tutorials"]
# gallery_dirs = ["auto_tutorials"]

# sphinx_gallery_conf = {
#     "examples_dirs": examples_dirs,
#     "gallery_dirs": gallery_dirs,
#     "capture_repr": ("_repr_html_", "__repr__"),
# }


# -- Options for the Thebe and Binder -----------------------------------------------------

# # Enable interactive code cells in Sphinx docs with Thebe and Binder (extension: "jupyter_sphinx")
# jupyter_sphinx_thebelab_config = {
#     "requestKernel": True,  # Start a Jupyter kernel for executing code cells
#     "mountActivateWidget": True,
#     "mountStatusWidget": True,
#     "binderOptions": {
#         "repo": "weizmannk/cbc-population-distributions",  # GitHub repo: username/repo-name (this need a /requirements.txt)
#         "binderUrl": "https://mybinder.org",  # BinderHub URL (default is fine)
#         "ref": "main",  # Branch or tag to use
#         "filepath": "cbc-population-distributions/tutorials/",  # Folder (or file) to open in Binder, relative to repo root
#     },
# }

thebe_config = {
    "always_load": True,
    "binder_options": {
        "repo": "cbc-population-distributions/requirements",
        "binder_url": "https://mybinder.org",
        "filepath": "cbc-population-distributions/tutorials/",
    },
}


# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]
exclude_patterns.append("_templates")  # noqa: F405

# This is added to the end of RST files - a good place to put substitutions to
# be used globally.

# rst_epilog = r"""
# .. |cbc-population-distributions| replace:: *cbc-population-distributions*
# .. |M4OPT| replace:: M\ :sup:`4`\ OPT
# """  # noqa: F405

# -- Project information ------------------------------------------------------

# This does not *have* to match the package name, but typically does
project = project_metadata["name"]
author = project_metadata["authors"][0]["name"]
copyright = "{0}, {1}".format(datetime.datetime.now().year, author)


# -- Options for HTML output --------------------------------------------------

html_static_path = ["_static"]

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = "cbc-population-distributions"

# Output file base name for HTML help builder.
htmlhelp_basename = project + "doc"

# Prefixes that are ignored for sorting the Python module index
modindex_common_prefix = ["cbc-population-distributions."]

html_theme_options.update(  # noqa: F405
    {
        "github_url": "https://github.com/weizmannk/cbc-population-distributions",
        "use_edit_page_button": True,
    }
)

html_context = {
    "default_mode": "dark",  # "light",
    "to_be_indexed": ["stable", "latest"],
    "github_user": "weizmannk",
    "github_repo": "cbc-population-distributions",
    "github_version": "main",
    "doc_path": "docs",
}

# -- Options for LaTeX output -------------------------------------------------
# If we want to use latex format
latex_documents = [
    ("index", project + ".tex", project + " Documentation", author, "manual")
]

latex_appendices = ["glossary/index"]

# -- Options for manual page output -------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [("index", project.lower(), project + " Documentation", [author], 1)]


# -- Options for the edit_on_github extension ---------------------------------

edit_on_github_project = "weizmannk/cbc-population-distributions"
edit_on_github_branch = "main"

edit_on_github_source_root = ""
edit_on_github_doc_root = "docs"


# Generate the URL for editing on GitHub
# edit_on_github_url = f"https://github.com/{edit_on_github_project}/edit/{edit_on_github_branch}/"  # Link to GitHub editor

# -- Resolving issue number to links in changelog -----------------------------
github_issues_url = "https://github.com/{0}/issues/".format(edit_on_github_project)

# -- Options for linkcheck output -------------------------------------------
# Ignore issue/PR links; set retries/timeouts for external link checking
linkcheck_ignore = [
    r"https://github\.com/astro-transients/tilepy/(?:issues|pull)/\d+",
]
linkcheck_retry = 5
linkcheck_timeout = 180
linkcheck_anchors = False


# -- Options for intersphinx --------------------------------------------------
intersphinx_mapping.update(  # noqa: F405
    {
        "gwpopulation": ("https://colmtalbot.github.io/gwpopulation/", None),
        "astropy": ("https://docs.astropy.org/en/stable/", None),
        "astropy_healpix": ("https://astropy-healpix.readthedocs.io/en/stable/", None),
        "astroplan": ("https://astroplan.readthedocs.io/en/latest/", None),
        "ligo.skymap": ("https://lscsoft.docs.ligo.org/ligo.skymap/", None),
        "pip": ("https://pip.pypa.io/en/stable/", None),
        "userguide": ("https://emfollow.docs.ligo.org/userguide/", None),
        "conda": ("https://docs.conda.io/projects/conda/en/latest/", None),
    }
)

# -- Options for plot_directive -----------------------------------------------
plot_include_source = True
plot_formats = [("svg", 300), ("pdf", 300)]
plot_html_show_formats = False


# -- Options for the sphinx.ext.todo extension --------------------------------
# extensions += ["sphinx.ext.todo"]
todo_include_todos = True

# -- API documentation options -----------------------------------------------
autodoc_typehints = "description"  # Show type hints in the API documentation (optional)


# --- BibTeX for scientific references ----------------------------------------
bibtex_bibfiles = ["refs.bib"]
bibtex_default_style = "short_alpha"
# bibtex_author_limit = 3


# -- Set notebook execution options accordingly -------------------------------

on_rtd = os.environ.get("READTHEDOCS") == "True"

if on_rtd:
    jupyter_execute_notebooks = "auto"  # or "force"
else:
    jupyter_execute_notebooks = "never"

if on_rtd:
    nbsphinx_execute = "auto"
else:
    nbsphinx_execute = "never"

sd_fontawesome_latex = True

# FontAwesome Icons
html_css_files = [
    "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
]
